<!-- Enhanced Patient Profile Page for Therapists -->
<div class="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
  <!-- Header -->
  <div class="bg-white shadow-sm border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between py-6">
        <div class="flex items-center">
          <button onclick="goBack()" class="mr-4 p-2 text-gray-600 hover:text-gray-800 transition-colors duration-200">
            <i class="fas fa-arrow-left text-lg"></i>
          </button>
          <div>
            <h1 class="text-2xl font-bold text-gray-900">Patient Profile</h1>
            <p class="text-sm text-gray-600">Comprehensive patient information and history</p>
          </div>
        </div>
        <div class="flex items-center gap-3">
          <button onclick="refreshPatientData()" class="px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg text-sm font-medium transition-colors duration-200">
            <i class="fas fa-sync-alt mr-2"></i>Refresh
          </button>
          <button onclick="exportPatientData()" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg text-sm font-medium transition-colors duration-200">
            <i class="fas fa-download mr-2"></i>Export
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Patient Header -->
    <div class="bg-white rounded-2xl shadow-lg border border-gray-200 p-8 mb-8">
      <div class="flex items-start gap-6">
        <!-- Patient Avatar -->
        <div class="relative">
          <% if (typeof patientProfileImageUrl !== 'undefined' && patientProfileImageUrl) { %>
            <img src="<%= patientProfileImageUrl %>" alt="Patient Avatar" class="w-24 h-24 rounded-2xl object-cover shadow-lg">
          <% } else { %>
            <div class="w-24 h-24 bg-gradient-to-br from-blue-400 to-purple-500 rounded-2xl flex items-center justify-center shadow-lg">
              <i class="fas fa-user text-white text-2xl"></i>
            </div>
          <% } %>
          <div class="absolute -bottom-1 -right-1 w-6 h-6 bg-green-400 border-4 border-white rounded-full"></div>
        </div>

        <!-- Patient Info -->
        <div class="flex-1">
          <div class="flex items-start justify-between mb-4">
            <div>
              <h2 class="text-3xl font-bold text-gray-900 mb-2" id="patient-name"><%= patient?.name || 'Loading...' %></h2>
              <p class="text-lg text-gray-600 mb-1" id="patient-age">Age: <%= patient?.age || '--' %></p>
              <p class="text-sm text-gray-500" id="patient-join-date">Joined: <%= patient?.created_at ? new Date(patient.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : '--' %></p>
            </div>
            <div class="text-right">
              <div class="inline-flex items-center gap-2 bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                <i class="fas fa-user-md"></i>
                <span>Your Patient</span>
              </div>
            </div>
          </div>

          <!-- Quick Actions -->
          <div class="flex items-center gap-3">
            <button onclick="startChat()" class="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 shadow-lg">
              <i class="fas fa-comments mr-2"></i>Start Chat
            </button>
            <button onclick="scheduleAppointment()" class="bg-white border-2 border-gray-200 hover:border-blue-300 hover:bg-blue-50 text-gray-700 hover:text-blue-700 px-6 py-3 rounded-xl font-medium transition-all duration-200">
              <i class="fas fa-calendar-plus mr-2"></i>Schedule Session
            </button>
            <button onclick="viewNotes()" class="bg-white border-2 border-gray-200 hover:border-green-300 hover:bg-green-50 text-gray-700 hover:text-green-700 px-6 py-3 rounded-xl font-medium transition-all duration-200">
              <i class="fas fa-sticky-note mr-2"></i>View Notes
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="bg-white rounded-2xl shadow-lg border border-gray-200 mb-8">
      <div class="border-b border-gray-200">
        <nav class="flex space-x-8 px-8">
          <button onclick="showTab('overview')" class="tab-button active py-4 px-1 border-b-2 border-blue-500 text-blue-600 font-medium text-sm">
            Overview
          </button>
          <button onclick="showTab('sessions')" class="tab-button py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 font-medium text-sm">
            Session Log
          </button>
          <button onclick="showTab('mood')" class="tab-button py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 font-medium text-sm">
            Mood Tracking
          </button>
          <button onclick="showTab('activities')" class="tab-button py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 font-medium text-sm">
            Therapy Activities
          </button>
          <button onclick="showTab('panic')" class="tab-button py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 font-medium text-sm">
            Panic Sessions
          </button>
        </nav>
      </div>

      <!-- Tab Content -->
      <div class="p-8">
        <!-- Overview Tab -->
        <div id="overview-tab" class="tab-content">
          <!-- Patient Summary Cards -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl p-6 border border-blue-200">
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-blue-600 text-sm font-medium">Total Sessions</p>
                  <p class="text-3xl font-bold text-blue-800" id="total-sessions"><%= patient?.appointments?.length || 0 %></p>
                </div>
                <div class="w-12 h-12 bg-blue-500 rounded-xl flex items-center justify-center">
                  <i class="fas fa-calendar-alt text-white text-lg"></i>
                </div>
              </div>
            </div>

            <div class="bg-gradient-to-br from-green-50 to-green-100 rounded-xl p-6 border border-green-200">
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-green-600 text-sm font-medium">Upcoming Appointments</p>
                  <p class="text-3xl font-bold text-green-800" id="upcoming-appointments"><%= patient?.upcomingAppointments || 0 %></p>
                </div>
                <div class="w-12 h-12 bg-green-500 rounded-xl flex items-center justify-center">
                  <i class="fas fa-clock text-white text-lg"></i>
                </div>
              </div>
            </div>

            <div class="bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl p-6 border border-purple-200">
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-purple-600 text-sm font-medium">Mood Entries</p>
                  <p class="text-3xl font-bold text-purple-800" id="mood-entries"><%= patient?.moodEntries?.length || 0 %></p>
                </div>
                <div class="w-12 h-12 bg-purple-500 rounded-xl flex items-center justify-center">
                  <i class="fas fa-heart text-white text-lg"></i>
                </div>
              </div>
            </div>
          </div>

          <!-- Patient Information -->
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <!-- Patient Details -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Patient Information</h3>
              <div class="space-y-3">
                <div class="flex justify-between">
                  <span class="text-gray-600">Email:</span>
                  <span class="font-medium"><%= patient?.email || 'Not available' %></span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Member Since:</span>
                  <span class="font-medium"><%= patient?.created_at ? new Date(patient.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long' }) : 'Unknown' %></span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Total Messages:</span>
                  <span class="font-medium"><%= patient?.messages_sent || 0 %></span>
                </div>
                <% if (patient?.last_message_date) { %>
                <div class="flex justify-between">
                  <span class="text-gray-600">Last Activity:</span>
                  <span class="font-medium"><%= new Date(patient.last_message_date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></span>
                </div>
                <% } %>
                <div class="flex justify-between">
                  <span class="text-gray-600">Art Therapy Sessions:</span>
                  <span class="font-medium"><%= patient?.art_count || 0 %></span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Music Therapy Sessions:</span>
                  <span class="font-medium"><%= patient?.music_count || 0 %></span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Panic Sessions:</span>
                  <span class="font-medium"><%= patient?.panic_count || 0 %></span>
                </div>
              </div>
            </div>

            <!-- Quick Stats -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Activity Summary</h3>
              <div class="grid grid-cols-2 gap-4">
                <div class="text-center p-4 bg-blue-50 rounded-lg">
                  <div class="text-2xl font-bold text-blue-600"><%= patient?.messages_sent || 0 %></div>
                  <div class="text-sm text-blue-800">Messages</div>
                </div>
                <div class="text-center p-4 bg-green-50 rounded-lg">
                  <div class="text-2xl font-bold text-green-600"><%= patient?.appointments?.length || 0 %></div>
                  <div class="text-sm text-green-800">Sessions</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Recent Activity -->
          <div class="bg-white rounded-xl border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Recent Activity</h3>
            <div class="space-y-4" id="recent-activity">
              <div class="flex items-center gap-4 p-4 bg-gray-50 rounded-lg">
                <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                  <i class="fas fa-spinner text-blue-500"></i>
                </div>
                <div class="flex-1">
                  <p class="text-gray-600">Loading recent activity...</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Sessions Tab -->
        <div id="sessions-tab" class="tab-content hidden">
          <div class="bg-white rounded-xl border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Session History</h3>
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Time</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="sessions-table">
                  <tr>
                    <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                      <i class="fas fa-spinner fa-spin mr-2"></i>Loading sessions...
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Mood Tracking Tab -->
        <div id="mood-tab" class="tab-content hidden">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Mood Chart -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Mood Trends</h3>
              <% if (patient?.moodEntries && patient.moodEntries.length > 0) { %>
                <div class="h-64 flex items-center justify-center">
                  <div class="text-center">
                    <div class="text-4xl font-bold text-purple-600 mb-2">
                      <%= patient.moodEntries.length %>
                    </div>
                    <p class="text-purple-800">Total Mood Entries</p>
                    <div class="mt-4 text-sm text-gray-600">
                      <% const moods = patient.moodEntries.map(e => e.mood).filter((m, i, arr) => arr.indexOf(m) === i); %>
                      <p>Recorded moods: <%= moods.join(', ') %></p>
                    </div>
                  </div>
                </div>
              <% } else { %>
                <div class="h-64 flex items-center justify-center text-gray-500">
                  <div class="text-center">
                    <i class="fas fa-heart text-4xl mb-2"></i>
                    <p>No mood data available</p>
                  </div>
                </div>
              <% } %>
            </div>

            <!-- Mood Entries -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Recent Mood Entries</h3>
              <% if (patient?.moodEntries && patient.moodEntries.length > 0) { %>
                <div class="space-y-4">
                  <% patient.moodEntries.slice(0, 5).forEach(entry => { %>
                    <div class="flex items-center gap-4 p-4 bg-purple-50 rounded-lg border border-purple-200">
                      <div class="w-10 h-10 bg-purple-500 rounded-lg flex items-center justify-center">
                        <i class="fas fa-heart text-white"></i>
                      </div>
                      <div class="flex-1">
                        <p class="text-purple-800 font-medium"><%= entry.mood || 'Mood recorded' %></p>
                        <p class="text-purple-600 text-sm"><%= new Date(entry.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></p>
                        <% if (entry.notes) { %>
                          <p class="text-purple-700 text-sm mt-1"><%= entry.notes %></p>
                        <% } %>
                      </div>
                      <div class="text-right">
                        <span class="text-purple-600 text-sm"><%= entry.intensity || '--' %>/10</span>
                      </div>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="text-center py-8 text-gray-500">
                  <i class="fas fa-heart text-3xl mb-2"></i>
                  <p>No mood entries recorded</p>
                </div>
              <% } %>
            </div>
          </div>
        </div>

        <!-- Therapy Activities Tab -->
        <div id="activities-tab" class="tab-content hidden">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Art Therapy -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Art Therapy</h3>
              <% if (patient?.artSessions && patient.artSessions.length > 0) { %>
                <div class="space-y-4">
                  <% patient.artSessions.forEach(session => { %>
                    <div class="flex items-center gap-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                      <div class="w-12 h-12 bg-yellow-500 rounded-lg flex items-center justify-center">
                        <i class="fas fa-palette text-white"></i>
                      </div>
                      <div class="flex-1">
                        <p class="text-yellow-800 font-medium"><%= session.art_type || 'Art Therapy' %></p>
                        <p class="text-yellow-600 text-sm"><%= new Date(session.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></p>
                        <% if (session.prompt) { %>
                          <p class="text-yellow-700 text-sm mt-1"><%= session.prompt %></p>
                        <% } %>
                        <% if (session.mood_before || session.mood_after) { %>
                          <p class="text-yellow-700 text-sm">Mood: <%= session.mood_before || 'N/A' %> → <%= session.mood_after || 'N/A' %></p>
                        <% } %>
                      </div>
                      <button onclick="viewArtwork('<%= session.id %>')" class="text-yellow-600 hover:text-yellow-800">
                        <i class="fas fa-eye"></i>
                      </button>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="text-center py-8 text-gray-500">
                  <i class="fas fa-palette text-3xl mb-2"></i>
                  <p>No art therapy sessions</p>
                </div>
              <% } %>
            </div>

            <!-- Music Therapy -->
            <div class="bg-white rounded-xl border border-gray-200 p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Music Therapy</h3>
              <% if (patient?.musicSessions && patient.musicSessions.length > 0) { %>
                <div class="space-y-4">
                  <% patient.musicSessions.forEach(session => { %>
                    <div class="flex items-center gap-4 p-4 bg-indigo-50 rounded-lg border border-indigo-200">
                      <div class="w-12 h-12 bg-indigo-500 rounded-lg flex items-center justify-center">
                        <i class="fas fa-music text-white"></i>
                      </div>
                      <div class="flex-1">
                        <p class="text-indigo-800 font-medium"><%= session.song_name || 'Music Therapy' %></p>
                        <p class="text-indigo-600 text-sm"><%= session.artist || 'Unknown Artist' %> • <%= session.category || 'General' %></p>
                        <p class="text-indigo-700 text-sm">Played <%= session.play_count || 0 %> times</p>
                      </div>
                      <div class="text-right">
                        <span class="text-indigo-600 text-sm"><%= new Date(session.created_at).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %></span>
                      </div>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="text-center py-8 text-gray-500">
                  <i class="fas fa-music text-3xl mb-2"></i>
                  <p>No music therapy sessions</p>
                </div>
              <% } %>
            </div>
          </div>
        </div>

        <!-- Panic Sessions Tab -->
        <div id="panic-tab" class="tab-content hidden">
          <div class="bg-white rounded-xl border border-gray-200 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Panic Sessions</h3>
            <% if (patient?.panicSessions && patient.panicSessions.length > 0) { %>
              <div class="space-y-4">
                <% patient.panicSessions.forEach(session => { %>
                  <div class="flex items-center gap-4 p-4 bg-red-50 rounded-lg border border-red-200">
                    <div class="w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center">
                      <i class="fas fa-exclamation-triangle text-white"></i>
                    </div>
                    <div class="flex-1">
                      <p class="text-red-800 font-medium">Panic Session</p>
                      <p class="text-red-600 text-sm">
                        <%= new Date(session.start_time).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %>
                        <% if (session.end_time) { %>
                          - <%= new Date(session.end_time).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>
                        <% } %>
                      </p>
                      <p class="text-red-700 text-sm">
                        Trigger: <%= session.trigger_method || 'Not specified' %> •
                        Duration: <%= Math.round((session.duration || 0) / 60000) %>min
                      </p>
                      <% if (session.breathing_used) { %>
                        <p class="text-red-700 text-sm">✓ Breathing exercises used</p>
                      <% } %>
                      <% if (session.emergency_contacts_used && session.emergency_contacts_used.length > 0) { %>
                        <p class="text-red-700 text-sm">✓ Emergency contacts: <%= session.emergency_contacts_used.length %></p>
                      <% } %>
                    </div>
                    <div class="text-right">
                      <button onclick="viewPanicSession('<%= session.id %>')" class="text-red-600 hover:text-red-800 text-sm">
                        View Details
                      </button>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } else { %>
              <div class="text-center py-8 text-gray-500">
                <i class="fas fa-exclamation-triangle text-3xl mb-2"></i>
                <p>No panic sessions recorded</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
let currentPatientId = '<%= patientId || new URLSearchParams(window.location.search).get("patientId") %>';

document.addEventListener('DOMContentLoaded', function() {
  if (currentPatientId) {
    loadPatientData();
    setupEventListeners();
  } else {
    showToast('No patient selected', 'error');
  }
});

function setupEventListeners() {
  // Tab switching
  const tabButtons = document.querySelectorAll('.tab-button');
  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      const tabName = this.getAttribute('onclick').match(/'([^']+)'/)[1];
      showTab(tabName);
    });
  });
}

function showTab(tabName) {
  // Hide all tabs
  document.querySelectorAll('.tab-content').forEach(tab => {
    tab.classList.add('hidden');
  });

  // Remove active state from all buttons
  document.querySelectorAll('.tab-button').forEach(button => {
    button.classList.remove('active', 'border-blue-500', 'text-blue-600');
    button.classList.add('border-transparent', 'text-gray-500');
  });

  // Show selected tab
  document.getElementById(tabName + '-tab').classList.remove('hidden');

  // Add active state to clicked button
  const clickedButton = Array.from(document.querySelectorAll('.tab-button')).find(btn => {
    return btn.getAttribute('onclick').includes(tabName);
  });

  if (clickedButton) {
    clickedButton.classList.add('active', 'border-blue-500', 'text-blue-600');
    clickedButton.classList.remove('border-transparent', 'text-gray-500');
  }

  // Load tab-specific data with stored patient data
  if (window.currentPatientData) {
    loadTabDataWithData(tabName, window.currentPatientData);
  } else {
    loadTabData(tabName);
  }
}

async function loadPatientData() {
  try {
    // Fetch comprehensive patient data
    const response = await fetch(`/therapist/patients/${currentPatientId}/info`, {
      credentials: 'same-origin',
      headers: { 'Content-Type': 'application/json' }
    });

    if (!response.ok) {
      showToast('Patient not found or access denied', 'error');
      return;
    }

    const data = await response.json();

    if (data) {
      // Store the full patient data globally so tabs can access it
      window.currentPatientData = data;
      displayPatientData(data);

      // Load the current tab's data
      const activeTab = document.querySelector('.tab-button.active');
      if (activeTab) {
        const tabName = activeTab.getAttribute('onclick').match(/'([^']+)'/)[1];
        loadTabDataWithData(tabName, data);
      }
    } else {
      showToast('Failed to load patient data', 'error');
    }
  } catch (error) {
    console.error('Error loading patient data:', error);
    showToast('Error loading patient data', 'error');
  }
}

function displayPatientData(data) {
  // Patient data is already available in the HTML template
  // Just trigger the tab data loading
  loadTabDataWithData('overview', {
    name: '<%= patient?.name || "" %>',
    email: '<%= patient?.email || "" %>',
    created_at: '<%= patient?.created_at || "" %>',
    messages_sent: '<%= patient?.messages_sent || 0 %>',
    last_message_date: '<%= patient?.last_message_date || "" %>'
  });
}

function loadTabData(tabName) {
  // Default implementation for tabs that don't need data
  switch(tabName) {
    case 'overview':
      loadRecentActivity();
      break;
    case 'sessions':
      loadSessionHistory();
      break;
    case 'mood':
      loadMoodTracking();
      break;
    case 'activities':
      loadTherapyActivities();
      break;
    case 'panic':
      loadPanicSessions();
      break;
  }
}

function loadTabDataWithData(tabName, data) {
  switch(tabName) {
    case 'overview':
      loadRecentActivityWithData(data);
      break;
    case 'sessions':
      loadSessionHistoryWithData(data);
      break;
    case 'mood':
      loadMoodTrackingWithData(data);
      break;
    case 'activities':
      loadTherapyActivitiesWithData(data);
      break;
    case 'panic':
      loadPanicSessionsWithData(data);
      break;
  }
}

async function loadRecentActivity() {
  const container = document.getElementById('recent-activity');
  container.innerHTML = `
    <div class="flex items-center gap-4 p-4 bg-gray-50 rounded-lg">
      <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
        <i class="fas fa-spinner fa-spin text-blue-500"></i>
      </div>
      <div class="flex-1">
        <p class="text-gray-600">Loading recent activity...</p>
      </div>
    </div>
  `;

  try {
    // Simulate loading recent activity
    setTimeout(() => {
      container.innerHTML = `
        <div class="flex items-center gap-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <div class="w-10 h-10 bg-blue-500 rounded-lg flex items-center justify-center">
            <i class="fas fa-comments text-white"></i>
          </div>
          <div class="flex-1">
            <p class="text-blue-800 font-medium">Last therapy session</p>
            <p class="text-blue-600 text-sm">2 days ago - Individual Therapy</p>
          </div>
          <span class="text-blue-600 text-sm">Completed</span>
        </div>
        <div class="flex items-center gap-4 p-4 bg-green-50 rounded-lg border border-green-200">
          <div class="w-10 h-10 bg-green-500 rounded-lg flex items-center justify-center">
            <i class="fas fa-heart text-white"></i>
          </div>
          <div class="flex-1">
            <p class="text-green-800 font-medium">Mood entry recorded</p>
            <p class="text-green-600 text-sm">1 day ago - Feeling positive about recent progress</p>
          </div>
          <span class="text-green-600 text-sm">Happy</span>
        </div>
      `;
    }, 1000);
  } catch (error) {
    console.error('Error loading recent activity:', error);
  }
}

function loadRecentActivityWithData(data) {
  const container = document.getElementById('recent-activity');

  // Generate activity based on available data
  const activities = [];

  // Add message activity
  if (data && data.messages_sent && parseInt(data.messages_sent) > 0) {
    activities.push({
      icon: 'fas fa-comments',
      color: 'blue',
      title: 'Messages Sent',
      description: `${data.messages_sent} messages exchanged`,
      status: 'Active'
    });
  }

  // Add last activity
  if (data && data.last_message_date) {
    activities.push({
      icon: 'fas fa-clock',
      color: 'green',
      title: 'Last Activity',
      description: `Last message: ${formatDate(data.last_message_date)}`,
      status: 'Recent'
    });
  }

  // Add account creation activity
  if (data && data.created_at) {
    activities.push({
      icon: 'fas fa-user-plus',
      color: 'purple',
      title: 'Account Created',
      description: `Patient joined on ${formatDate(data.created_at)}`,
      status: 'Joined'
    });
  }

  if (activities.length === 0) {
    container.innerHTML = `
      <div class="text-center py-8 text-gray-500">
        <i class="fas fa-inbox text-3xl mb-2"></i>
        <p>No recent activity</p>
      </div>
    `;
    return;
  }

  container.innerHTML = activities.map(activity => `
    <div class="flex items-center gap-4 p-4 bg-${activity.color}-50 rounded-lg border border-${activity.color}-200">
      <div class="w-10 h-10 bg-${activity.color}-500 rounded-lg flex items-center justify-center">
        <i class="${activity.icon} text-white"></i>
      </div>
      <div class="flex-1">
        <p class="text-${activity.color}-800 font-medium">${activity.title}</p>
        <p class="text-${activity.color}-600 text-sm">${activity.description}</p>
      </div>
      <span class="text-${activity.color}-600 text-sm">${activity.status}</span>
    </div>
  `).join('');
}

async function loadSessionHistory() {
  const container = document.getElementById('sessions-table');
  container.innerHTML = `
    <tr>
      <td colspan="5" class="px-6 py-4 text-center text-gray-500">
        <i class="fas fa-spinner fa-spin mr-2"></i>Loading sessions...
      </td>
    </tr>
  `;

  try {
    // Simulate loading session history
    setTimeout(() => {
      container.innerHTML = `
        <tr class="hover:bg-gray-50">
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">2024-01-15</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">10:00 AM</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Individual Therapy</td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
              Completed
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
            <button class="text-blue-600 hover:text-blue-900">View Notes</button>
          </td>
        </tr>
        <tr class="hover:bg-gray-50">
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">2024-01-10</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2:00 PM</td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Group Therapy</td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
              Scheduled
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
            <button class="text-blue-600 hover:text-blue-900">View Details</button>
          </td>
        </tr>
      `;
    }, 1000);
  } catch (error) {
    console.error('Error loading session history:', error);
  }
}

function loadSessionHistoryWithData(data) {
  const container = document.getElementById('sessions-table');

  if (!data.appointments || data.appointments.length === 0) {
    container.innerHTML = `
      <tr>
        <td colspan="5" class="px-6 py-4 text-center text-gray-500">
          <i class="fas fa-calendar-times mr-2"></i>No appointments found
        </td>
      </tr>
    `;
    return;
  }

  container.innerHTML = data.appointments.map(appointment => `
    <tr class="hover:bg-gray-50">
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
        ${formatDate(appointment.appointment_date)}
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
        ${appointment.appointment_time || '--'}
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
        ${appointment.session_type || 'Therapy Session'}
      </td>
      <td class="px-6 py-4 whitespace-nowrap">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
          ${appointment.status === 'confirmed' ? 'bg-green-100 text-green-800' :
            appointment.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
            appointment.status === 'cancelled' ? 'bg-red-100 text-red-800' :
            'bg-gray-100 text-gray-800'}">
          ${appointment.status || 'Unknown'}
        </span>
      </td>
      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
        <button onclick="viewAppointmentNotes('${appointment.id}')" class="text-blue-600 hover:text-blue-900">
          View Notes
        </button>
      </td>
    </tr>
  `).join('');
}

function loadMoodTrackingWithData(data) {
  // Update mood entries list with fresh data
  const container = document.getElementById('mood-entries-list');

  if (!data.moodEntries || data.moodEntries.length === 0) {
    container.innerHTML = `
      <div class="text-center py-8 text-gray-500">
        <i class="fas fa-heart text-3xl mb-2"></i>
        <p>No mood entries recorded</p>
      </div>
    `;
    return;
  }

  container.innerHTML = data.moodEntries.slice(0, 5).map(entry => `
    <div class="flex items-center gap-4 p-4 bg-purple-50 rounded-lg border border-purple-200">
      <div class="w-10 h-10 bg-purple-500 rounded-lg flex items-center justify-center">
        <i class="fas fa-heart text-white"></i>
      </div>
      <div class="flex-1">
        <p class="text-purple-800 font-medium">${entry.mood || 'Mood recorded'}</p>
        <p class="text-purple-600 text-sm">${formatDate(entry.created_at)}</p>
        ${entry.notes ? `<p class="text-purple-700 text-sm mt-1">${entry.notes}</p>` : ''}
      </div>
      <div class="text-right">
        <span class="text-purple-600 text-sm">${entry.intensity || '--'}/10</span>
      </div>
    </div>
  `).join('');
}

function loadTherapyActivitiesWithData(data) {
  // Update art therapy section
  const artContainer = document.getElementById('art-therapy-list');
  if (data.artSessions && data.artSessions.length > 0) {
    artContainer.innerHTML = data.artSessions.slice(0, 3).map(session => `
      <div class="flex items-center gap-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200">
        <div class="w-12 h-12 bg-yellow-500 rounded-lg flex items-center justify-center">
          <i class="fas fa-palette text-white"></i>
        </div>
        <div class="flex-1">
          <p class="text-yellow-800 font-medium">Art Therapy Session</p>
          <p class="text-yellow-600 text-sm">${formatDate(session.created_at)}</p>
          ${session.prompt ? `<p class="text-yellow-700 text-sm mt-1">Prompt: ${session.prompt}</p>` : ''}
        </div>
        <button onclick="viewArtwork('${session.id}')" class="text-yellow-600 hover:text-yellow-800">
          <i class="fas fa-eye"></i>
        </button>
      </div>
    `).join('');
  } else {
    artContainer.innerHTML = `
      <div class="text-center py-8 text-gray-500">
        <i class="fas fa-palette text-3xl mb-2"></i>
        <p>No art therapy sessions</p>
      </div>
    `;
  }

  // Update music therapy section
  const musicContainer = document.getElementById('music-therapy-list');
  if (data.musicSessions && data.musicSessions.length > 0) {
    musicContainer.innerHTML = data.musicSessions.slice(0, 3).map(session => `
      <div class="flex items-center gap-4 p-4 bg-indigo-50 rounded-lg border border-indigo-200">
        <div class="w-12 h-12 bg-indigo-500 rounded-lg flex items-center justify-center">
          <i class="fas fa-music text-white"></i>
        </div>
        <div class="flex-1">
          <p class="text-indigo-800 font-medium">${session.song_name || 'Music Therapy'}</p>
          <p class="text-indigo-600 text-sm">${session.artist || 'Unknown Artist'} • ${session.category || 'General'}</p>
          <p class="text-indigo-700 text-sm">Played ${session.play_count || 0} times</p>
        </div>
        <div class="text-right">
          <span class="text-indigo-600 text-sm">${formatDate(session.created_at)}</span>
        </div>
      </div>
    `).join('');
  } else {
    musicContainer.innerHTML = `
      <div class="text-center py-8 text-gray-500">
        <i class="fas fa-music text-3xl mb-2"></i>
        <p>No music therapy sessions</p>
      </div>
    `;
  }
}

function loadPanicSessionsWithData(data) {
  // Update panic sessions list with fresh data
  const container = document.getElementById('panic-sessions-list');

  if (!data.panicSessions || data.panicSessions.length === 0) {
    container.innerHTML = `
      <div class="text-center py-8 text-gray-500">
        <i class="fas fa-exclamation-triangle text-3xl mb-2"></i>
        <p>No panic sessions recorded</p>
      </div>
    `;
    return;
  }

  container.innerHTML = data.panicSessions.slice(0, 5).map(session => `
    <div class="flex items-center gap-4 p-4 bg-red-50 rounded-lg border border-red-200">
      <div class="w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center">
        <i class="fas fa-exclamation-triangle text-white"></i>
      </div>
      <div class="flex-1">
        <p class="text-red-800 font-medium">Panic Session</p>
        <p class="text-red-600 text-sm">
          ${formatDate(session.start_time)}
          ${session.end_time ? ` - ${formatDate(session.end_time)}` : ''}
        </p>
        <p class="text-red-700 text-sm">
          Trigger: ${session.trigger_method || 'Not specified'} •
          Intensity: ${session.intensity_level || 'Unknown'}/10
        </p>
        ${session.notes ? `<p class="text-red-700 text-sm mt-1">${session.notes}</p>` : ''}
      </div>
      <div class="text-right">
        <button onclick="viewPanicSession('${session.id}')" class="text-red-600 hover:text-red-800 text-sm">
          View Details
        </button>
      </div>
    </div>
  `).join('');
}

function loadMoodTracking() {
  // Load mood tracking data
  console.log('Loading mood tracking data...');
}

function loadTherapyActivities() {
  // Load therapy activities data
  console.log('Loading therapy activities data...');
}

function loadPanicSessions() {
  // Load panic sessions data
  console.log('Loading panic sessions data...');
}

// Additional utility functions
function viewAppointmentNotes(appointmentId) {
  showToast('View appointment notes feature coming soon!', 'info');
}

function viewArtwork(drawingId) {
  showToast('View artwork feature coming soon!', 'info');
}

function viewArtTherapy() {
  showToast('View art therapy sessions feature coming soon!', 'info');
}

function viewMusicTherapy() {
  showToast('View music therapy sessions feature coming soon!', 'info');
}

function viewPanicSessions() {
  showToast('View panic sessions feature coming soon!', 'info');
}

function viewPanicSession(sessionId) {
  showToast('View panic session details feature coming soon!', 'info');
}

// Utility functions
function formatDate(dateString) {
  if (!dateString) return '--';
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

function goBack() {
  window.history.back();
}

function startChat() {
  window.location.href = `/therapist/chat?patientId=${currentPatientId}`;
}

function scheduleAppointment() {
  showToast('Schedule appointment feature coming soon!', 'info');
}

function viewNotes() {
  showToast('View notes feature coming soon!', 'info');
}

function refreshPatientData() {
  loadPatientData();
  showToast('Patient data refreshed', 'success');
}

function exportPatientData() {
  showToast('Export feature coming soon!', 'info');
}

function showToast(message, type = 'info') {
  const toast = document.createElement('div');
  toast.className = `fixed top-6 right-6 ${type === 'error' ? 'bg-red-500' : type === 'success' ? 'bg-green-500' : 'bg-blue-500'} text-white px-6 py-4 rounded-xl shadow-2xl z-50 transform translate-x-full transition-transform duration-300`;
  toast.innerHTML = `
    <div class="flex items-center gap-3">
      <div class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center">
        <i class="fas ${type === 'error' ? 'fa-exclamation-circle' : type === 'success' ? 'fa-check-circle' : 'fa-info-circle'}"></i>
      </div>
      <span class="font-medium">${message}</span>
    </div>
  `;

  document.body.appendChild(toast);

  setTimeout(() => {
    toast.classList.remove('translate-x-full');
  }, 100);

  setTimeout(() => {
    toast.classList.add('translate-x-full');
    setTimeout(() => {
      toast.remove();
    }, 300);
  }, 3000);
}
</script>

<style>
/* Enhanced animations and transitions */
.tab-button {
  transition: all 0.2s ease-in-out;
}

.tab-button:hover {
  color: #3b82f6;
}

.tab-button.active {
  border-bottom-width: 2px;
}

/* Custom scrollbar for tables */
.overflow-x-auto::-webkit-scrollbar {
  height: 6px;
}

.overflow-x-auto::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 3px;
}

.overflow-x-auto::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}

.overflow-x-auto::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Card hover effects */
.bg-gradient-to-br:hover {
  transform: translateY(-2px);
  transition: transform 0.2s ease-in-out;
}

/* Loading animations */
@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.fa-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
</style>